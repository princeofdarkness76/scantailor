This file is in UTF-8 encoding.

Этот документ описывает процесс сборки Scan Tailor под Windows.

Первым делом, нам понадобится нижеследующий софт.  Если не указано обратного,
всегда берите последние стабильные версии.

1. CMake 2.6.x (протестировано с 2.6.2)
   Сайт: http://www.cmake.org
2. jpeg-6b
   Сайт: http://www.ijg.org/
3. zlib
   Сайт: http://www.zlib.net/
4. libpng
   Сайт: http://www.libpng.org/pub/png/libpng.html
5. libtiff
   Сайт: http://www.remotesensing.org/libtiff/
   Из-за того, что libtiff обновляется редко, а дыры в нем находят часто, лучше
   всего будет его сразу же пропатчить.  В таком случае брать его нужно отсюда:
   http://packages.debian.org/source/sid/tiff
   Там и сам libtiff и патч для него.  Процесс наложения патча описан далее
   в этом документе.  Если вы не собираетесь распространять ваши сборки Scan
   Tailor'а и не собираетесь открывать им файлы из сомнительных источников,
   тогда можете и не патчить libtiff.
6. Qt 4.x.x (протестировано с Qt 4.4.2)
   Cайт: http://trolltech.com
   Download Qt -> Open Source -> Application Development -> Qt for Windows: C++
   Оттуда скачиваем версию c mingw, а не просто архив с исходниками.  Таким
   образом мы гарантированно получим правильную версию MinGW, а кроме того
   сэкономим время на компиляции.  Библиотеки Qt все равно придется
   перекомпилировать, а вот всякие программы, которые идут с Qt - не придется.
   Так или иначе, сборка с той версией Qt, в которой только исходники, все
   равно поддерживается (MinGW придется ставить вручную), хотя все дальнейшие
   инструкции предполагают, что используется именно mingw версия.


                                    Инструкции

1. Создать директорию сборки.  В ее полном пути не должно быть пробелов.
   Предлагается директория C:\build

2. Распаковать jpeg-6b, libpng, libtiff, zlib и сам scantailor в директорию
   сборки.  В результате должна получиться примерно такая структура директорий:
   C:\build
     | jpeg-6b
     | libpng-1.2.31
     | scantailor-0.9.0
     | tiff-3.8.2
     | zlib-1.2.3

   Если не знаете, чем распаковывать .tar.gz файлы, попробуйте вот этим:
   http://www.7-zip.org/

3. Создать там еще пару директорий:
     | scantailor-build
     | scantailor-deps-build

4. Установить Qt, указав в инсталляторе, чтобы скачал и установил MinGW.

5. Установить CMake.

6. Теперь нужно сделать так, чтобы CMake видела директорию bin пакета MinGW
   в PATH.  Есть два альтернативных способа, как этого добиться:
   1.  Идем в Панель управления (-> Производительность и Обслуживание)
       -> Система -> Дополнительно -> Переменные среды, и добавляем в конец
       переменной Path что-то вроде: ";C:\MinGW\bin" (без кавычек).
   2.  Можно просто запускать CMake из Qt Command Prompt, которая сама добавит
       MinGW в PATH.  К сожалению, в этом случае придется указывать полный
       путь к CMake, вот так:
       C:\Program Files\CMake 2.6\bin\CMakeSetup.exe
       Просто CMakeSetup.exe не запустится, даже если вы при инсталляции
       CMake указали добавить ее в PATH.  Причина в том, что Qt Command Prompt
       собирает переменную PATH с нуля, игнорируя ее изначальное значение.
       Впрочем никто не мешает вам подредактировать файл qtvars.bat и добавить
       там директорию CMake в PATH.

6. Запустить CMake и указать следующее:

   Директория исходников: C:\build\scantailor-0.9.0\packaging\windows\build-deps
   Директория сборки:     C:\build\scantailor-deps-build

   Жмем "Configure".  Выбираем тип проекта "MinGW Makefiles".  Если какие-то
   пути не были найдены, указываем их вручную и жмем "Configure" опять.
   Если все прошло нормально, кнопка "OK" станет активной.
   Жмем на нее.

7. Запустить Qt Command Prompt из меню Пуск.
   Туда вводим следующее:

   C:
   cd C:\build\scantailor-deps-build
   mingw32-make 2> log.txt

   "2> log.txt" нужно затем, чтобы ошибки писались бы в файл, а не на экран.
   Этот файл поможет определить, что именно пошло не так.

   Последний шаг займет много времени - возможно пару часов или больше.
   Имейте в виду, что через пару минут у вас попросят принять лицензию Qt.

   Когда этот шаг завершится, гляньте в файл log.txt чтобы убедиться, что
   все прошло как надо.  Если нет - то в конце файла будут ошибки (error).
   Предупреждения (warning) можно игнорировать.

8. Опять запускаем CMake и указываем следующее:

   Директория исходников: C:\build\scantailor-0.9.0
   Директория сборки:     C:\build\scantailor-build

   Жмем "Configure".  Выбираем тип проекта "MinGW Makefiles".  Если какие-то
   пути не были найдены, указываем их вручную и жмем "Configure" опять.
   Если все прошло нормально, кнопка "OK" станет активной.
   Жмем на нее.

9. Возвращаемся в Qt Command Promt и даем там следующие команды:

   C:
   cd C:\build\scantailor-build
   mingw32-make 2> log.txt

   Если все прошло как надо, в текущей директории появится файл scantailor.exe
   Для работы ему нужен mingwm10.dll, который можно взять из директории bin
   пакета MinGW.


                              Патчим libtiff

Эти инструкции предполагают, что вы взяли патч из Debian'а:
http://packages.debian.org/source/sid/tiff
Там вы найдете и оригинальные исходники libtiff и отдельный патч в формате
.diff.gz.  Этот патч не простой - он несет в себе еще несколько патчей, которые
надо накладывать в определенном порядке.  К счастью, у нас есть скрипт CMake,
который сильно облегчает эту работу.

Вот инструкции:

1. Скачать и установить утилиту коммандной строки Patch:
   http://gnuwin32.sourceforge.net/packages/patch.htm

   Лучше берите версию с инсталлятором.  В этом случае CMake сможет
   самостоятельно найти путь к patch.exe

2. Скачать и распаковать сам патч.  В распакованном виде у него будет
   расширение ".diff".  Лучше скопировать его в директорию сборки (C:\build),
   чтобы CMake смог его найти автоматически.

3. Создать еще одну поддиректорию в C:\build
   Назовем ее "tiff-patch-dir".

4. Запустить CMake и указать следующее:

   Директория исходников: C:\build\scantailor-0.9.0\packaging\windows\patch_libtiff
   Директория сборки:     C:\build\tiff-patch-dir

   Жмем "Configure".  Выбираем тип проекта "MinGW Makefiles".  Если какие-то
   пути не были найдены, указываем их вручную и жмем "Configure" опять.
   Если все прошло нормально, кнопка "OK" станет активной.
   Жмем на нее.

5. Из Qt Command Prompt сделать следующее:

   C:
   cd C:\build
   cd tiff-patch-dir
   mingw32-make

   Если ошибок не было, значит вы успешно пропатчили libtiff.  Если когда-либо
   вам понадобится пропатчить его снова, сначала придется привести его в
   исходное состояние, то есть заново распаковать его из .tar.gz файла.
